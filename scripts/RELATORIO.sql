--REL1 (SEM FILTRO)
SELECT P.NOME AS CLIENTE, P.EMAIL, MAX(V.DATA_VENDA) AS "DATA ULTIMA VENDA", C.CARTAO_TIPO AS "CARTAO TIPO", C.CARTAO_NUMERO AS "CARTAO NUMERO", C.CARTAO_VALIDADE_MES AS "CARTAO MES", C.CARTAO_VALIDADE_ANO AS "CARTAO ANO"
FROM CLIENTE C JOIN PESSOA P ON C.ID_PESSOA = P.ID_PESSOA JOIN VENDA V ON V.ID_CLIENTE = C.ID_CLIENTE
    WHERE ((C.CARTAO_VALIDADE_ANO < (SELECT EXTRACT(YEAR FROM SYSDATE) FROM DUAL)) OR 
    (C.CARTAO_VALIDADE_ANO = (SELECT EXTRACT(YEAR FROM SYSDATE) FROM DUAL) AND C.CARTAO_VALIDADE_MES < (SELECT EXTRACT(MONTH FROM SYSDATE) FROM DUAL)))
    GROUP BY P.NOME, P.EMAIL, C.CARTAO_TIPO, C.CARTAO_NUMERO, C.CARTAO_VALIDADE_MES, C.CARTAO_VALIDADE_ANO;

--REL1 (COM FILTRO)
SELECT P.NOME AS CLIENTE, P.EMAIL, MAX(V.DATA_VENDA) AS "DATA ULTIMA VENDA", C.CARTAO_TIPO AS "CARTAO TIPO", C.CARTAO_NUMERO AS "CARTAO NUMERO", C.CARTAO_VALIDADE_MES AS "CARTAO MES", C.CARTAO_VALIDADE_ANO AS "CARTAO ANO"
FROM CLIENTE C JOIN PESSOA P ON C.ID_PESSOA = P.ID_PESSOA JOIN VENDA V ON V.ID_CLIENTE = C.ID_CLIENTE
    WHERE ((C.CARTAO_VALIDADE_ANO < (SELECT EXTRACT(YEAR FROM SYSDATE) FROM DUAL)) OR 
    (C.CARTAO_VALIDADE_ANO = (SELECT EXTRACT(YEAR FROM SYSDATE) FROM DUAL) AND C.CARTAO_VALIDADE_MES < (SELECT EXTRACT(MONTH FROM SYSDATE) FROM DUAL))
    ) AND P.NOME LIKE '%Jill%'
    GROUP BY P.NOME, P.EMAIL, C.CARTAO_TIPO, C.CARTAO_NUMERO, C.CARTAO_VALIDADE_MES, C.CARTAO_VALIDADE_ANO;


------------------------------------------------------------------------------------------------------------------------------------------------

--REL2 (SEM FILTRO)
SELECT P.NOME AS EMPREGADO, D.NOME AS DEPARTAMENTO, H.TURNO, H.DATA_ENTRADA AS "DATA ENTRADA", CASE WHEN TO_CHAR(H.DATA_SAIDA) IS NULL THEN 'Ativo' ELSE TO_CHAR(H.DATA_SAIDA) END AS "DATA SAIDA" FROM
    PESSOA P JOIN EMPREGADO E ON P.ID_PESSOA = E.ID_PESSOA 
    JOIN HISTORICODEPARTAMENTO H ON H.ID_PESSOA = P.ID_PESSOA
    JOIN DEPARTAMENTO D ON D.ID_DEPARTAMENTO = H.ID_DEPARTAMENTO;

--REL2 (COM FILTRO)
SELECT P.NOME AS EMPREGADO, D.NOME AS DEPARTAMENTO, H.TURNO, H.DATA_ENTRADA AS "DATA ENTRADA", CASE WHEN TO_CHAR(H.DATA_SAIDA) IS NULL THEN 'Ativo' ELSE TO_CHAR(H.DATA_SAIDA) END AS "DATA SAIDA" FROM
    PESSOA P JOIN EMPREGADO E ON P.ID_PESSOA = E.ID_PESSOA 
    JOIN HISTORICODEPARTAMENTO H ON H.ID_PESSOA = P.ID_PESSOA
    JOIN DEPARTAMENTO D ON D.ID_DEPARTAMENTO = H.ID_DEPARTAMENTO
    WHERE P.NOME LIKE '%Lolan%' OR D.NOME ='Production' OR (P.NOME LIKE '%Kim%' AND D.NOME ='Shipping and Receiving');



------------------------------------------------------------------------------------------------------------------------------------------------


--REL3 (SEM FILTRO)
SELECT ANO, MAIS_2000, MENOS_2000, MAIS_2000+MENOS_2000 AS "TOTAL FRETE" FROM
    (SELECT ANO, CASE WHEN TO_CHAR(MAIS_2000) IS NULL THEN '0' ELSE TO_CHAR(MAIS_2000) END AS MAIS_2000, CASE WHEN TO_CHAR(MENOS_2000) IS NULL THEN '0' ELSE TO_CHAR(MENOS_2000) END AS MENOS_2000  FROM
        (SELECT EXTRACT(YEAR FROM DATA_ENVIO) AS ANO, SUM(VALOR_FRETE) AS FRETE, CASE WHEN TOTAL > 2000 THEN '1' ELSE '0' END AS ID
            FROM VENDA
            GROUP BY EXTRACT(YEAR FROM DATA_ENVIO), TOTAL)
        PIVOT(
            SUM(FRETE)
            FOR ID IN ('1' AS MAIS_2000,'0' AS MENOS_2000)      
        ))
    ORDER BY ANO ASC;

--REL3 (COM FILTRO)
SELECT ANO, MAIS_2000, MENOS_2000, MAIS_2000+MENOS_2000 AS "TOTAL FRETE" FROM
    (SELECT ANO, CASE WHEN TO_CHAR(MAIS_2000) IS NULL THEN '0' ELSE TO_CHAR(MAIS_2000) END AS MAIS_2000, CASE WHEN TO_CHAR(MENOS_2000) IS NULL THEN '0' ELSE TO_CHAR(MENOS_2000) END AS MENOS_2000  FROM
        (SELECT EXTRACT(YEAR FROM DATA_ENVIO) AS ANO, SUM(VALOR_FRETE) AS FRETE, CASE WHEN TOTAL > 2000 THEN '1' ELSE '0' END AS ID
            FROM VENDA
            WHERE EXTRACT(YEAR FROM DATA_ENVIO) = '2018'
            GROUP BY EXTRACT(YEAR FROM DATA_ENVIO), TOTAL)
        PIVOT(
            SUM(FRETE)
            FOR ID IN ('1' AS MAIS_2000,'0' AS MENOS_2000)      
        ))
    ORDER BY ANO ASC;


------------------------------------------------------------------------------------------------------------------------------------------------

--REL4 (SEM FILTRO)
SELECT ANO,JANEIRO,FEVEREIRO,MARCO,ABRIL,MAIO,JUNHO,JULHO,AGOSTO,SETEMBRO,OUTUBRO,NOVEMBRO,DEZEMBRO,TOTAL,TRUNC((((TOTAL-LAG(TOTAL,1,0) OVER(ORDER BY ANO))/TOTAL)*100),2) AS PERCENTUAL FROM
    (SELECT ANO,JANEIRO,FEVEREIRO,MARCO,ABRIL,MAIO,JUNHO,JULHO,AGOSTO,SETEMBRO,OUTUBRO,NOVEMBRO,DEZEMBRO, 
        JANEIRO+FEVEREIRO+MARCO+ABRIL+MAIO+JUNHO+JULHO+AGOSTO+SETEMBRO+OUTUBRO+NOVEMBRO+DEZEMBRO AS TOTAL
        FROM
        (SELECT ANO, CASE WHEN TO_CHAR(JANEIRO) IS NULL THEN '0' ELSE TO_CHAR(JANEIRO) END AS JANEIRO,
            CASE WHEN TO_CHAR(FEVEREIRO) IS NULL THEN '0' ELSE TO_CHAR(FEVEREIRO) END AS FEVEREIRO,
            CASE WHEN TO_CHAR(MARCO) IS NULL THEN '0' ELSE TO_CHAR(MARCO) END AS MARCO,
            CASE WHEN TO_CHAR(ABRIL) IS NULL THEN '0' ELSE TO_CHAR(ABRIL) END AS ABRIL,
            CASE WHEN TO_CHAR(MAIO) IS NULL THEN '0' ELSE TO_CHAR(MAIO) END AS MAIO,
            CASE WHEN TO_CHAR(JUNHO) IS NULL THEN '0' ELSE TO_CHAR(JUNHO) END AS JUNHO,
            CASE WHEN TO_CHAR(JULHO) IS NULL THEN '0' ELSE TO_CHAR(JULHO) END AS JULHO,
            CASE WHEN TO_CHAR(AGOSTO) IS NULL THEN '0' ELSE TO_CHAR(AGOSTO) END AS AGOSTO,
            CASE WHEN TO_CHAR(SETEMBRO) IS NULL THEN '0' ELSE TO_CHAR(SETEMBRO) END AS SETEMBRO,
            CASE WHEN TO_CHAR(OUTUBRO) IS NULL THEN '0' ELSE TO_CHAR(OUTUBRO) END AS OUTUBRO,
            CASE WHEN TO_CHAR(NOVEMBRO) IS NULL THEN '0' ELSE TO_CHAR(NOVEMBRO) END AS NOVEMBRO,
            CASE WHEN TO_CHAR(DEZEMBRO) IS NULL THEN '0' ELSE TO_CHAR(DEZEMBRO) END AS DEZEMBRO
            FROM
            (SELECT EXTRACT(MONTH FROM DATA_VENDA) AS MES, EXTRACT(YEAR FROM DATA_VENDA) AS ANO,SUM(TOTAL) AS TOTAL FROM VENDA
                        GROUP BY EXTRACT(YEAR FROM DATA_VENDA),  EXTRACT(MONTH FROM DATA_VENDA)
                        ORDER BY EXTRACT(YEAR FROM DATA_VENDA))
                PIVOT(
                    SUM(TOTAL)
                    FOR MES IN('1' AS JANEIRO,'2' AS FEVEREIRO, '3' AS MARCO, '4' AS ABRIL, '5' AS MAIO, '6' AS JUNHO,
                    '7' AS JULHO, '8' AS AGOSTO, '9' AS SETEMBRO, '10' AS OUTUBRO, '11' AS NOVEMBRO, '12' AS DEZEMBRO)
                )
                ORDER BY ANO ASC));


--REL4 (COM FILTRO)
SELECT * FROM
    (SELECT ANO,JANEIRO,FEVEREIRO,MARCO,ABRIL,MAIO,JUNHO,JULHO,AGOSTO,SETEMBRO,OUTUBRO,NOVEMBRO,DEZEMBRO,TOTAL,TRUNC((((TOTAL-LAG(TOTAL,1,0) OVER(ORDER BY ANO))/TOTAL)*100),2) AS PERCENTUAL FROM
        (SELECT ANO,JANEIRO,FEVEREIRO,MARCO,ABRIL,MAIO,JUNHO,JULHO,AGOSTO,SETEMBRO,OUTUBRO,NOVEMBRO,DEZEMBRO, 
            JANEIRO+FEVEREIRO+MARCO+ABRIL+MAIO+JUNHO+JULHO+AGOSTO+SETEMBRO+OUTUBRO+NOVEMBRO+DEZEMBRO AS TOTAL
            FROM
            (SELECT ANO, CASE WHEN TO_CHAR(JANEIRO) IS NULL THEN '0' ELSE TO_CHAR(JANEIRO) END AS JANEIRO,
                CASE WHEN TO_CHAR(FEVEREIRO) IS NULL THEN '0' ELSE TO_CHAR(FEVEREIRO) END AS FEVEREIRO,
                CASE WHEN TO_CHAR(MARCO) IS NULL THEN '0' ELSE TO_CHAR(MARCO) END AS MARCO,
                CASE WHEN TO_CHAR(ABRIL) IS NULL THEN '0' ELSE TO_CHAR(ABRIL) END AS ABRIL,
                CASE WHEN TO_CHAR(MAIO) IS NULL THEN '0' ELSE TO_CHAR(MAIO) END AS MAIO,
                CASE WHEN TO_CHAR(JUNHO) IS NULL THEN '0' ELSE TO_CHAR(JUNHO) END AS JUNHO,
                CASE WHEN TO_CHAR(JULHO) IS NULL THEN '0' ELSE TO_CHAR(JULHO) END AS JULHO,
                CASE WHEN TO_CHAR(AGOSTO) IS NULL THEN '0' ELSE TO_CHAR(AGOSTO) END AS AGOSTO,
                CASE WHEN TO_CHAR(SETEMBRO) IS NULL THEN '0' ELSE TO_CHAR(SETEMBRO) END AS SETEMBRO,
                CASE WHEN TO_CHAR(OUTUBRO) IS NULL THEN '0' ELSE TO_CHAR(OUTUBRO) END AS OUTUBRO,
                CASE WHEN TO_CHAR(NOVEMBRO) IS NULL THEN '0' ELSE TO_CHAR(NOVEMBRO) END AS NOVEMBRO,
                CASE WHEN TO_CHAR(DEZEMBRO) IS NULL THEN '0' ELSE TO_CHAR(DEZEMBRO) END AS DEZEMBRO
                FROM
                (SELECT EXTRACT(MONTH FROM DATA_VENDA) AS MES, EXTRACT(YEAR FROM DATA_VENDA) AS ANO,SUM(TOTAL) AS TOTAL FROM VENDA
                            WHERE EXTRACT(YEAR FROM DATA_VENDA) = '2018' OR EXTRACT(YEAR FROM DATA_VENDA) = '2017'
                            GROUP BY EXTRACT(YEAR FROM DATA_VENDA),  EXTRACT(MONTH FROM DATA_VENDA)
                            ORDER BY EXTRACT(YEAR FROM DATA_VENDA))
                    PIVOT(
                        SUM(TOTAL)
                        FOR MES IN('1' AS JANEIRO,'2' AS FEVEREIRO, '3' AS MARCO, '4' AS ABRIL, '5' AS MAIO, '6' AS JUNHO,
                        '7' AS JULHO, '8' AS AGOSTO, '9' AS SETEMBRO, '10' AS OUTUBRO, '11' AS NOVEMBRO, '12' AS DEZEMBRO)
                    )
                    ORDER BY ANO ASC)))
        WHERE ANO = '2018';


------------------------------------------------------------------------------------------------------------------------------------------------

--REL5 (SEM FILTRO)
SELECT NOME, PESO, CATEGORIA, SEMESTRE, ANO, TOTAL FROM
    (SELECT NOME, PESO, CATEGORIA, SEMESTRE, ANO, SUM(TOTAL) AS TOTAL, ROW_NUMBER() OVER(PARTITION BY ANO,SEMESTRE ORDER BY SUM(TOTAL) DESC) AS ID FROM    
            (SELECT P.NOME, P.PRECO, P.PESO, C.NOME AS CATEGORIA, SUM(I.TOTAL_ITEM) AS TOTAL, CASE 
                WHEN EXTRACT(MONTH FROM V.DATA_VENDA) >=1 AND EXTRACT(MONTH FROM V.DATA_VENDA) <= 6 THEN 1
                ELSE 2 END AS SEMESTRE, EXTRACT(YEAR FROM V.DATA_VENDA) AS ANO  FROM
                PRODUTO P JOIN ITEMVENDA I ON P.ID_PRODUTO = I.ID_PRODUTO
                JOIN SUBCATEGORIA S ON P.ID_SUBCATEGORIA = S.ID_SUBCATEGORIA
                JOIN CATEGORIA C ON C.ID_CATEGORIA = S.ID_CATEGORIA
                JOIN VENDA V ON V.ID_VENDA = I.ID_VENDA
                GROUP BY EXTRACT(YEAR FROM V.DATA_VENDA),EXTRACT(MONTH FROM V.DATA_VENDA), P.NOME, P.PRECO, P.PESO, C.NOME
                ORDER BY EXTRACT(YEAR FROM V.DATA_VENDA), EXTRACT(MONTH FROM V.DATA_VENDA)
            )GROUP BY ANO, SEMESTRE, NOME, PESO, CATEGORIA
            ORDER BY ANO, SEMESTRE
    )WHERE ID <= 15;

--REL5 (COM FILTRO)
SELECT NOME, PESO, CATEGORIA, SEMESTRE, ANO, TOTAL FROM
    (SELECT NOME, PESO, CATEGORIA, SEMESTRE, ANO, SUM(TOTAL) AS TOTAL, ROW_NUMBER() OVER(PARTITION BY ANO,SEMESTRE ORDER BY SUM(TOTAL) DESC) AS ID FROM    
            (SELECT P.NOME, P.PRECO, P.PESO, C.NOME AS CATEGORIA, SUM(I.TOTAL_ITEM) AS TOTAL, CASE 
                WHEN EXTRACT(MONTH FROM V.DATA_VENDA) >=1 AND EXTRACT(MONTH FROM V.DATA_VENDA) <= 6 THEN 1
                ELSE 2 END AS SEMESTRE, EXTRACT(YEAR FROM V.DATA_VENDA) AS ANO  FROM
                PRODUTO P JOIN ITEMVENDA I ON P.ID_PRODUTO = I.ID_PRODUTO
                JOIN SUBCATEGORIA S ON P.ID_SUBCATEGORIA = S.ID_SUBCATEGORIA
                JOIN CATEGORIA C ON C.ID_CATEGORIA = S.ID_CATEGORIA
                JOIN VENDA V ON V.ID_VENDA = I.ID_VENDA
                WHERE EXTRACT(YEAR FROM V.DATA_VENDA) = '2015'
                GROUP BY EXTRACT(YEAR FROM V.DATA_VENDA),EXTRACT(MONTH FROM V.DATA_VENDA), P.NOME, P.PRECO, P.PESO, C.NOME
                ORDER BY EXTRACT(YEAR FROM V.DATA_VENDA), EXTRACT(MONTH FROM V.DATA_VENDA)
            )
            WHERE SEMESTRE = '2'
            GROUP BY ANO, SEMESTRE, NOME, PESO, CATEGORIA
            ORDER BY ANO, SEMESTRE
    )WHERE ID <= 15;


------------------------------------------------------------------------------------------------------------------------------------------------

--REL6 (SEM FILTRO)
SELECT PRODUTO_1,CATEGORIA_1,SUBCATEGORIA_1,SUM(TOTAL_1) AS TOTAL_1,PRODUTO_2,CATEGORIA_2,SUBCATEGORIA_2,SUM(TOTAL_2) AS TOTAL_2, COUNT(ID_VENDA) AS QUANTIDADE FROM
    (SELECT ID_VENDA, CASE WHEN TO_NUMBER(ID_PRODUTO_1)<TO_NUMBER(ID_PRODUTO_2) THEN ID_PRODUTO_1 ELSE ID_PRODUTO_2 END AS ID_PRODUTO_1,PRODUTO_1,CATEGORIA_1,SUBCATEGORIA_1,TOTAL_1,CASE WHEN TO_NUMBER(ID_PRODUTO_1)<TO_NUMBER(ID_PRODUTO_2) THEN ID_PRODUTO_2 ELSE ID_PRODUTO_1 END AS ID_PRODUTO_2,PRODUTO_2,CATEGORIA_2,SUBCATEGORIA_2,TOTAL_2  FROM
        (SELECT ID_VENDA,ID_PRODUTO_1,PRODUTO_1,CATEGORIA_1,SUBCATEGORIA_1,TOTAL_1,ID_PRODUTO_2,PRODUTO_2,CATEGORIA_2,SUBCATEGORIA_2,TOTAL_2 FROM
            (SELECT ID_VENDA, SUBSTR(ID_PRODUTO, 1, INSTR(ID_PRODUTO, '-')-1) AS ID_PRODUTO_1, SUBSTR(PRODUTO, 1, INSTR(PRODUTO, '-')-1) AS PRODUTO_1, SUBSTR(CATEGORIA, 1, INSTR(CATEGORIA, '-')-1) AS CATEGORIA_1, SUBSTR(SUBCATEGORIA, 1, INSTR(SUBCATEGORIA, '-')-1) AS SUBCATEGORIA_1, SUBSTR(TOTAL, 1, INSTR(TOTAL, '-')-1) AS TOTAL_1, SUBSTR(ID_PRODUTO, INSTR(ID_PRODUTO, '-')+1) AS ID_PRODUTO_2, SUBSTR(PRODUTO, INSTR(PRODUTO, '-')+1) AS PRODUTO_2, SUBSTR(CATEGORIA, INSTR(CATEGORIA, '-')+1) AS CATEGORIA_2, SUBSTR(SUBCATEGORIA, INSTR(SUBCATEGORIA, '-')+1) AS SUBCATEGORIA_2, SUBSTR(TOTAL, INSTR(TOTAL, '-')+1) AS TOTAL_2 FROM
                (SELECT ID_VENDA, LISTAGG(ID_PRODUTO,'-') WITHIN GROUP (ORDER BY ID_PRODUTO) AS ID_PRODUTO, LISTAGG(PRODUTO,'-') WITHIN GROUP (ORDER BY ID_PRODUTO) AS PRODUTO, LISTAGG(CATEGORIA,'-') WITHIN GROUP (ORDER BY ID_PRODUTO) AS CATEGORIA, LISTAGG(SUBCATEGORIA,'-') WITHIN GROUP (ORDER BY ID_PRODUTO) AS SUBCATEGORIA,LISTAGG(TOTAL,'-') WITHIN GROUP (ORDER BY ID_PRODUTO) AS TOTAL FROM
                    (SELECT ID_VENDA, ID_PRODUTO, PRODUTO, CATEGORIA, SUBCATEGORIA, TOTAL FROM
                            (SELECT V.ID_VENDA, P.ID_PRODUTO,P.NOME AS PRODUTO, C.NOME AS CATEGORIA, S.NOME AS SUBCATEGORIA, I.TOTAL_ITEM AS TOTAL, ROW_NUMBER() OVER (PARTITION BY V.ID_VENDA ORDER BY I.TOTAL_ITEM DESC) AS ID FROM
                                PRODUTO P JOIN ITEMVENDA I ON I.ID_PRODUTO = P.ID_PRODUTO
                                JOIN VENDA V ON V.ID_VENDA = I.ID_VENDA
                                JOIN SUBCATEGORIA S ON S.ID_SUBCATEGORIA = P.ID_SUBCATEGORIA
                                JOIN CATEGORIA C ON C.ID_CATEGORIA = S.ID_CATEGORIA)
                            WHERE ID <= 2)
                    GROUP BY ID_VENDA))
            WHERE ID_PRODUTO_1 IS NOT NULL AND ID_PRODUTO_2 IS NOT NULL))
    GROUP BY ID_PRODUTO_1,ID_PRODUTO_2,PRODUTO_1,PRODUTO_2,CATEGORIA_1,CATEGORIA_2,SUBCATEGORIA_1,SUBCATEGORIA_2;

--REL6 (COM FILTRO)
SELECT * FROM
    (SELECT PRODUTO_1,CATEGORIA_1,SUBCATEGORIA_1,SUM(TOTAL_1) AS TOTAL_1,PRODUTO_2,CATEGORIA_2,SUBCATEGORIA_2,SUM(TOTAL_2) AS TOTAL_2, COUNT(ID_VENDA) AS QUANTIDADE FROM
        (SELECT ID_VENDA, CASE WHEN TO_NUMBER(ID_PRODUTO_1)<TO_NUMBER(ID_PRODUTO_2) THEN ID_PRODUTO_1 ELSE ID_PRODUTO_2 END AS ID_PRODUTO_1,PRODUTO_1,CATEGORIA_1,SUBCATEGORIA_1,TOTAL_1,CASE WHEN TO_NUMBER(ID_PRODUTO_1)<TO_NUMBER(ID_PRODUTO_2) THEN ID_PRODUTO_2 ELSE ID_PRODUTO_1 END AS ID_PRODUTO_2,PRODUTO_2,CATEGORIA_2,SUBCATEGORIA_2,TOTAL_2  FROM
            (SELECT ID_VENDA,ID_PRODUTO_1,PRODUTO_1,CATEGORIA_1,SUBCATEGORIA_1,TOTAL_1,ID_PRODUTO_2,PRODUTO_2,CATEGORIA_2,SUBCATEGORIA_2,TOTAL_2 FROM
                (SELECT ID_VENDA, SUBSTR(ID_PRODUTO, 1, INSTR(ID_PRODUTO, '-')-1) AS ID_PRODUTO_1, SUBSTR(PRODUTO, 1, INSTR(PRODUTO, '-')-1) AS PRODUTO_1, SUBSTR(CATEGORIA, 1, INSTR(CATEGORIA, '-')-1) AS CATEGORIA_1, SUBSTR(SUBCATEGORIA, 1, INSTR(SUBCATEGORIA, '-')-1) AS SUBCATEGORIA_1, SUBSTR(TOTAL, 1, INSTR(TOTAL, '-')-1) AS TOTAL_1, SUBSTR(ID_PRODUTO, INSTR(ID_PRODUTO, '-')+1) AS ID_PRODUTO_2, SUBSTR(PRODUTO, INSTR(PRODUTO, '-')+1) AS PRODUTO_2, SUBSTR(CATEGORIA, INSTR(CATEGORIA, '-')+1) AS CATEGORIA_2, SUBSTR(SUBCATEGORIA, INSTR(SUBCATEGORIA, '-')+1) AS SUBCATEGORIA_2, SUBSTR(TOTAL, INSTR(TOTAL, '-')+1) AS TOTAL_2 FROM
                    (SELECT ID_VENDA, LISTAGG(ID_PRODUTO,'-') WITHIN GROUP (ORDER BY ID_PRODUTO) AS ID_PRODUTO, LISTAGG(PRODUTO,'-') WITHIN GROUP (ORDER BY ID_PRODUTO) AS PRODUTO, LISTAGG(CATEGORIA,'-') WITHIN GROUP (ORDER BY ID_PRODUTO) AS CATEGORIA, LISTAGG(SUBCATEGORIA,'-') WITHIN GROUP (ORDER BY ID_PRODUTO) AS SUBCATEGORIA,LISTAGG(TOTAL,'-') WITHIN GROUP (ORDER BY ID_PRODUTO) AS TOTAL FROM
                        (SELECT ID_VENDA, ID_PRODUTO, PRODUTO, CATEGORIA, SUBCATEGORIA, TOTAL FROM
                                (SELECT V.ID_VENDA, P.ID_PRODUTO,P.NOME AS PRODUTO, C.NOME AS CATEGORIA, S.NOME AS SUBCATEGORIA, I.TOTAL_ITEM AS TOTAL, ROW_NUMBER() OVER (PARTITION BY V.ID_VENDA ORDER BY I.TOTAL_ITEM DESC) AS ID FROM
                                    PRODUTO P JOIN ITEMVENDA I ON I.ID_PRODUTO = P.ID_PRODUTO
                                    JOIN VENDA V ON V.ID_VENDA = I.ID_VENDA
                                    JOIN SUBCATEGORIA S ON S.ID_SUBCATEGORIA = P.ID_SUBCATEGORIA
                                    JOIN CATEGORIA C ON C.ID_CATEGORIA = S.ID_CATEGORIA)
                                WHERE ID <= 2)
                        GROUP BY ID_VENDA))
                WHERE ID_PRODUTO_1 IS NOT NULL AND ID_PRODUTO_2 IS NOT NULL))
        GROUP BY ID_PRODUTO_1,ID_PRODUTO_2,PRODUTO_1,PRODUTO_2,CATEGORIA_1,CATEGORIA_2,SUBCATEGORIA_1,SUBCATEGORIA_2)
        WHERE QUANTIDADE = 1;

------------------------------------------------------------------------------------------------------------------------------------------------

--REL7 (SEM FILTRO)
SELECT ANO, PAIS, ESTADO, TOTAL_ESTADO AS "TOTAL ESTADO", TOTAL_PAIS AS "TOTAL PAIS" FROM
    (SELECT ANO,PAIS,ESTADO,MAX(TOTAL_ESTADO) AS TOTAL_ESTADO,SUM(TOTAL_ESTADO) AS TOTAL_PAIS, ROW_NUMBER() OVER(PARTITION BY PAIS ORDER BY ANO DESC) AS ID FROM
        (SELECT ANO,PAIS,FIRST_VALUE(ESTADO) OVER(PARTITION BY ANO,PAIS ORDER BY ID ASC) AS ESTADO,TOTAL_ESTADO FROM    
            (SELECT EXTRACT(YEAR FROM V.DATA_VENDA) AS ANO, E.PAIS, E.ESTADO,SUM(V.TOTAL) AS TOTAL_ESTADO, ROW_NUMBER() OVER(PARTITION BY EXTRACT(YEAR FROM V.DATA_VENDA),PAIS ORDER BY SUM(V.TOTAL) DESC) AS ID FROM
                    VENDA V JOIN CLIENTE C ON V.ID_CLIENTE = C.ID_CLIENTE
                    JOIN PESSOA P ON P.ID_PESSOA = C.ID_PESSOA
                    JOIN ENDERECO E ON E.ID_ENDERECO = P.ID_ENDERECO
                    GROUP BY EXTRACT(YEAR FROM V.DATA_VENDA), PAIS,ESTADO
                    ORDER BY EXTRACT(YEAR FROM V.DATA_VENDA),PAIS,TOTAL_ESTADO ASC))
        GROUP BY ANO,PAIS,ESTADO
        ORDER BY ANO,PAIS)
    WHERE ID = 1;

--REL7 (COM FILTRO)
SELECT ANO, PAIS, ESTADO, TOTAL_ESTADO AS "TOTAL ESTADO", TOTAL_PAIS AS "TOTAL PAIS" FROM
    (SELECT ANO,PAIS,ESTADO,MAX(TOTAL_ESTADO) AS TOTAL_ESTADO,SUM(TOTAL_ESTADO) AS TOTAL_PAIS, ROW_NUMBER() OVER(PARTITION BY PAIS ORDER BY ANO DESC) AS ID FROM
        (SELECT ANO,PAIS,FIRST_VALUE(ESTADO) OVER(PARTITION BY ANO,PAIS ORDER BY ID ASC) AS ESTADO,TOTAL_ESTADO FROM    
            (SELECT EXTRACT(YEAR FROM V.DATA_VENDA) AS ANO, E.PAIS, E.ESTADO,SUM(V.TOTAL) AS TOTAL_ESTADO, ROW_NUMBER() OVER(PARTITION BY EXTRACT(YEAR FROM V.DATA_VENDA),PAIS ORDER BY SUM(V.TOTAL) DESC) AS ID FROM
                    VENDA V JOIN CLIENTE C ON V.ID_CLIENTE = C.ID_CLIENTE
                    JOIN PESSOA P ON P.ID_PESSOA = C.ID_PESSOA
                    JOIN ENDERECO E ON E.ID_ENDERECO = P.ID_ENDERECO
                    WHERE EXTRACT(YEAR FROM V.DATA_VENDA) = '2015'
                    GROUP BY EXTRACT(YEAR FROM V.DATA_VENDA), PAIS,ESTADO
                    ORDER BY EXTRACT(YEAR FROM V.DATA_VENDA),PAIS,TOTAL_ESTADO ASC
            )
        )
        GROUP BY ANO,PAIS,ESTADO
        ORDER BY ANO,PAIS
    )WHERE ID = 1;

COMMIT;
